#!/usr/bin/env python
import glob, os, shutil, subprocess, sys
import utils

def msum(actions):
    exception = Exception("no actions")
    for action in actions:
        try:
            return action()
        except Exception as e:
            exception = e
    raise exception

def escape_apos(s):
    return s.replace("'", '''"'"'"'"''')

def find_command(name, ds):
    for d in ds:
        if subprocess.call(["sh", "-c",
                            "command -v '{0}'".format(escape_apos(d))],
                           stdout=utils.DEV_NULL, stderr=utils.DEV_NULL) == 0:
            print("using {1} as {0}".format(name, d))
            return d
    raise Exception("can't find {0}; tried: {1}".format(name, ds))

def find_dir(name, ds):
    for d in ds:
        if os.path.isfile(os.path.join(d, name)):
            print("found {0} at {1}".format(name, d))
            return d
    raise Exception("can't find {0}; tried: {1}".format(name, ds))

def find_lib(name, *args, **kwargs):
    try:
        d = libs[name]
        print("override: using {0} at {1}".format(name, d))
        return d
    except KeyError:
        return msum(map(
            lambda ext: lambda:
            find_dir("lib" + name + ext, ds=common_lib_dirs, *args, **kwargs),
            common_lib_exts
        ))

def find_include(name, *args, **kwargs):
    try:
        d = includes[name]
        print("override: using {0} at {1}".format(name, d))
        return d
    except KeyError:
        return find_dir(name, ds=common_include_dirs, *args, **kwargs)

fflags = ["-O3", "-Wall"]
optimize_native = True
includes = dict()
include_dirs = set()
libs = dict()
lib_dirs = set()
common_include_dirs = [
    "/usr/include",
    "/usr/local/include",
    "/opt/local/include",
]
common_lib_dirs = [
    "/usr/lib",
    "/usr/local/lib",
    "/opt/local/lib",
]
common_lib_exts = [".so", ".dylib", ".dll.a"]

try:
    from configure_overrides import *
except ImportError:
    pass

# detect compilers
fc = find_command("Fortran compiler", ["gfortran"]) # assume gfortran

fflags.extend("-I" + d for d in include_dirs)

wiki_url = "https://wikihost.nscl.msu.edu/talent/lib/exe/fetch.php?media="
make_vars = {
    "FC": fc,
    "FFLAGS": " ".join(fflags),

    "RRL_URL":       wiki_url + "reducereaclib.tar.gz",
    "RRL_ROOT":      "dist/reducereaclib",
    "RRL":           "$(RRL_ROOT)/.cookie",

    "XNET_URL":      wiki_url + "xnet_public.zip",
    "XNET_DIR":      "dist/xnet_public",
    "XNET":          "$(XNET_DIR)/.cookie",
    "XNET_ROOT":     "$(XNET_DIR)/branches/public",
    "XNET_MAKEFILE": "Makefile_local_gfortran",
}

lines = ["# note: this file is autogenerated\n.POSIX:"]
lines.extend("{0}={1}".format(k, v) for k, v in make_vars.items())
lines.append(utils.read_file("Makefile.in"))
utils.write_file("Makefile", "\n".join(lines))
